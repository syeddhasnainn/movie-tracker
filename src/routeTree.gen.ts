/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchlistRouteImport } from './routes/watchlist'
import { Route as TrendingRouteImport } from './routes/trending'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as SearchRouteImport } from './routes/search'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MovieIdRouteImport } from './routes/movie.$id'

const WatchlistRoute = WatchlistRouteImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => rootRouteImport,
} as any)
const TrendingRoute = TrendingRouteImport.update({
  id: '/trending',
  path: '/trending',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MovieIdRoute = MovieIdRouteImport.update({
  id: '/movie/$id',
  path: '/movie/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/trending': typeof TrendingRoute
  '/watchlist': typeof WatchlistRoute
  '/movie/$id': typeof MovieIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/trending': typeof TrendingRoute
  '/watchlist': typeof WatchlistRoute
  '/movie/$id': typeof MovieIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/trending': typeof TrendingRoute
  '/watchlist': typeof WatchlistRoute
  '/movie/$id': typeof MovieIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/search'
    | '/signin'
    | '/trending'
    | '/watchlist'
    | '/movie/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/search' | '/signin' | '/trending' | '/watchlist' | '/movie/$id'
  id:
    | '__root__'
    | '/'
    | '/search'
    | '/signin'
    | '/trending'
    | '/watchlist'
    | '/movie/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SearchRoute: typeof SearchRoute
  SigninRoute: typeof SigninRoute
  TrendingRoute: typeof TrendingRoute
  WatchlistRoute: typeof WatchlistRoute
  MovieIdRoute: typeof MovieIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watchlist': {
      id: '/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof WatchlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/trending': {
      id: '/trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof TrendingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movie/$id': {
      id: '/movie/$id'
      path: '/movie/$id'
      fullPath: '/movie/$id'
      preLoaderRoute: typeof MovieIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SearchRoute: SearchRoute,
  SigninRoute: SigninRoute,
  TrendingRoute: TrendingRoute,
  WatchlistRoute: WatchlistRoute,
  MovieIdRoute: MovieIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
